@page
@model TryingTwitchOAuth.Pages.ListModel
@{
	ViewData["Title"] = "Predictions List";
}
@inject UserService _userService

<div class="container my-5">
	<form method="get">
		<div class="my-2 row align-items-md-center justify-content-start flex-column flex-md-row">
			<div class="col d-flex align-items-center text-nowrap">
				<label asp-for="OrderBy">Order By:</label>
				<select asp-for="OrderBy" class="form-control ml-2">
					@foreach (var item in Enum.GetValues<OrderBy>())
					{
						<option value="@item">@item</option>
					}
				</select>
			</div>
			<div class="col d-flex align-items-center text-nowrap">
				<label asp-for="ConferenceFilter">Conference:</label>
				<select asp-for="ConferenceFilter" class="form-control ml-2">
					@foreach (var item in Enum.GetValues<ConferenceFilter>())
					{
						<option value="@item">@item</option>
					}
				</select>
			</div>
			<div class="col d-flex align-items-center text-nowrap">
				<label asp-for="ResultFilter">Result:</label>
				<select asp-for="ResultFilter" class="form-control ml-2">
					@foreach (var item in Enum.GetValues<ResultFilter>())
					{
						<option value="@item">@item</option>
					}
				</select>
			</div>
			<div class="col d-flex align-items-center text-nowrap">
				<label asp-for="OpenFilter">Prediction State:</label>
				<select asp-for="OpenFilter" class="form-control ml-2">
					@foreach (var item in Enum.GetValues<OpenFilter>())
					{
						<option value="@item">@item</option>
					}
				</select>
			</div>
			<div class="col d-flex align-items-center text-nowrap">
				<label asp-for="EntriesOpenFilter">Entries State:</label>
				<select asp-for="EntriesOpenFilter" class="form-control ml-2">
					@foreach (var item in Enum.GetValues<OpenFilter>())
					{
						<option value="@item">@item</option>
					}
				</select>
			</div>
			<div class="col d-flex align-items-center text-nowrap">
				<label asp-for="TwitchUid">UID:</label>
				<input asp-for="TwitchUid" class="form-control ml-2" />
			</div>
		</div>
		<div class="mx-2 my-2">
			<button class="btn btn-primary" type="submit">Apply</button>
		</div>
	</form>
	<div class="table-responsive">
		<table class="table table-striped table-hover">
			<thead>
				<tr>
					<th>Actions</th>
					<th>Title</th>
					<th>Created At</th>
					<th>Modified At</th>
					<th>Is Active</th>
					<th>Entries Are Open</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var prediction in Model.Predictions)
				{
					<tr>
						<td>
							@if (_userService.UserCanEdit())
							{
								<a class="link-primary" href="/Author/@prediction.Id">Edit</a>
								@:/
							}
							<a class="link-primary" href="/@prediction.Id">View</a>
						</td>
						<td>
							@prediction.Title
						</td>
						<td class="time">@prediction.CreatedAt</td>
						<td class="time">@prediction.ModifiedAt</td>
						<td class="text-center">
							<input type="checkbox" class="form-check-input" disabled checked="@prediction.IsOpen" />
						</td>
						<td class="text-center">
							<input type="checkbox" class="form-check-input" disabled checked="@prediction.EntriesAreOpen" />
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>

	<div class="d-flex align-items-center">
		<form method="get" class="mx-2">
			<input type="hidden" asp-for="Skip" value="@(Model.Skip - Model.Take < 0 ? 0 : Model.Skip - Model.Take)" />
			<input type="hidden" asp-for="Take" />
			<input type="hidden" asp-for="OrderBy" />
			<input type="hidden" asp-for="ConferenceFilter" />
			<input type="hidden" asp-for="ResultFilter" />
			<input type="hidden" asp-for="OpenFilter" />
			<input type="hidden" asp-for="EntriesOpenFilter" />
			<input type="hidden" asp-for="TwitchUid" />
			<button class="btn btn-secondary" type="submit" @(Model.Skip == 0 ? "disabled" : "")>Previous</button>
		</form>
		<form method="get" class="mx-2">
			<input type="hidden" asp-for="Skip" value="@(Model.Skip + Model.Take)" />
			<input type="hidden" asp-for="Take" />
			<input type="hidden" asp-for="OrderBy" />
			<input type="hidden" asp-for="ConferenceFilter" />
			<input type="hidden" asp-for="ResultFilter" />
			<input type="hidden" asp-for="OpenFilter" />
			<input type="hidden" asp-for="EntriesOpenFilter" />
			<input type="hidden" asp-for="TwitchUid" />
			<button class="btn btn-primary" type="submit" @(Model.HasMore == false ? "disabled" : "")>Next</button>
		</form>
	</div>
</div>

@section Scripts
{
	<script>

		function adjustTimeZone() {
			var offset = new Date().getTimezoneOffset();
			var timeElements = document.querySelectorAll('td.time');
			timeElements.forEach(function(element) {
				var utcDate = new Date(element.innerText); // Append 'Z' to indicate UTC time
				var localDate = new Date(utcDate.getTime() - offset * 60000);
				var options = { timeZoneName: 'short' };
				element.innerText = localDate.toLocaleString(undefined, options);
			});
		}

		document.addEventListener('DOMContentLoaded', function() {
			adjustTimeZone();
		});
	</script>
}